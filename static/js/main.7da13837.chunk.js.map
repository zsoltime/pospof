{"version":3,"sources":["firebase.js","constants/index.js","helpers/index.js","context/projects-context.js","hooks/index.js","context/selected-project-context.js","components/ProjectOverlay.js","components/TaskDate.js","components/AddTask.js","components/layout/Header.js","components/IndividualProject.js","components/Projects.js","components/AddProject.js","components/layout/Sidebar.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","collatedTasks","key","name","collatedTasksExist","selectedProject","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectsContext","createContext","ProjectsProvider","children","useState","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProjects","docs","map","project","data","docId","JSON","stringify","useProjects","Provider","value","useProjectsValue","useContext","SelectedProjectContext","SelectedProjectProvider","setSelectedProject","useSelectedProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","className","onClick","onKeyDown","e","role","tabIndex","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","moment","format","data-testid","aria-label","add","AddTask","showAddTaskMain","shouldShowMain","showQuickAddTask","setShowQuickAddTask","setTask","taskDate","showMain","setShowMain","addTask","collatedDate","archived","date","userId","type","onChange","target","Header","darkMode","setDarkMode","setShouldShowMain","src","IndividualProject","showConfirm","setShowConfirm","doc","delete","Projects","activeValue","active","setActive","data-doc-id","AddProject","shouldShow","show","setShow","projectName","setProjectName","placeholder","Sidebar","showProjects","setShowProjects","undefined","Checkbox","update","Tasks","tasks","setTasks","archivedTasks","setArchivedTasks","unsubscribe","onSnapshot","newTasks","filter","diff","useTasks","getTitle","console","log","getCollatedTitle","document","title","taskDesc","Content","App","darkModeDefault","render","getElementById"],"mappings":"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","file":"static/js/main.7da13837.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = firebase.initializeApp({\n    apiKey: \"AIzaSyBic0yipL6n63-ch_bj4evvM0XVcLCkqr4\",\n    authDomain: \"matt-task-manager.firebaseapp.com\",\n    databaseURL: \"https://matt-task-manager.firebaseio.com\",\n    projectId: \"matt-task-manager\",\n    storageBucket: \"matt-task-manager.appspot.com\",\n    messagingSenderId: \"728902353168\",\n    appId: \"1:728902353168:web:38283d15434152f168a595\",\n    measurementId: \"G-PXPFLK2R8X\",\n});\n\nexport { firebaseConfig as firebase};\n\n","\n//collated Tasks refer to Inbox, Today, Next 7 Day\nexport const collatedTasks = [\n    {key: 'INBOX', name: 'Inbox'},\n    {key: 'TODAY', name: 'Today'},\n    {key: 'NEXT_7', name: 'Next 7 Days'},\n    \n]","import React from 'react';\nimport { collatedTasks } from '../constants';\n\n\nexport const getTitle = (projects, projectId) => \n    projects.find(project => project.projectId === projectId);\n\nexport const getCollatedTitle = (projects, key) =>\n    projects.find(project => project.key === key);\n\nexport const collatedTasksExist = selectedProject =>\n    collatedTasks.find(task => task.key === selectedProject);\n\nexport const generatePushId = (() => {\n        const PUSH_CHARS =\n          '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n      \n        const lastRandChars = [];\n      \n        return function() {\n          let now = new Date().getTime();\n      \n          const timeStampChars = new Array(8);\n          for (var i = 7; i >= 0; i--) {\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n            now = Math.floor(now / 64);\n          }\n      \n          let id = timeStampChars.join('');\n      \n          for (i = 0; i < 12; i++) {\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\n          }\n      \n          return id;\n        };\n      })();","\n\nimport React, { createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useProjects } from '../hooks';\n\nexport const ProjectsContext = createContext();\nexport const ProjectsProvider = ({ children }) => {\n  const { projects, setProjects } = useProjects();\n\n  return (\n    <ProjectsContext.Provider value={{ projects, setProjects }}>\n      {children}\n    </ProjectsContext.Provider>\n  );\n};\n\nexport const useProjectsValue = () => useContext(ProjectsContext);\n\n","import { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { firebase } from '../firebase';\nimport { collatedTasksExist } from '../helpers';\n\nexport const useTasks = selectedProject => {\n  const [tasks, setTasks] = useState([]);\n  const [archivedTasks, setArchivedTasks] = useState([]);\n\n  useEffect(() => {\n    let unsubscribe = firebase\n      .firestore()\n      .collection('tasks')\n      .where('userId', '==', 'nfeCumoN');\n\n    unsubscribe =\n      selectedProject && !collatedTasksExist(selectedProject)\n        ? (unsubscribe = unsubscribe.where('projectId', '==', selectedProject))\n        : selectedProject === 'TODAY'\n        ? (unsubscribe = unsubscribe.where(\n            'date',\n            '==',\n            moment().format('DD/MM/YYYY')\n          ))\n        : selectedProject === 'INBOX' || selectedProject === 0\n        ? (unsubscribe = unsubscribe.where('date', '==', ''))\n        : unsubscribe;\n\n    unsubscribe = unsubscribe.onSnapshot(snapshot => {\n      const newTasks = snapshot.docs.map(task => ({\n        id: task.id,\n        ...task.data(),\n      }));\n\n      setTasks(\n        selectedProject === 'NEXT_7'\n          ? newTasks.filter(\n              task =>\n                moment(task.date, 'DD-MM-YYYY').diff(moment(), 'days') <= 7 &&\n                task.archived !== true\n            )\n          : newTasks.filter(task => task.archived !== true)\n      );\n      setArchivedTasks(newTasks.filter(task => task.archived !== false));\n    });\n\n    return () => unsubscribe();\n  }, [selectedProject]);\n\n  return { tasks, archivedTasks };\n};\n\nexport const useProjects = () => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection('projects')\n      .where('userId', '==', 'nfeCumoN')\n      .orderBy('projectId')\n      .get()\n      .then(snapshot => {\n        const allProjects = snapshot.docs.map(project => ({\n          ...project.data(),\n          docId: project.id,\n        }));\n\n        if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\n          setProjects(allProjects);\n        }\n      });\n  }, [projects]);\n\n  return { projects, setProjects };\n};\n\n\n\n// const selectedProject = 1; \n// const { tasks, archivedTasks} = useTasks(selectedProject);\n\n\n//passing an empty array means we only want to run this once - after the component is mounted\n//without the array then it's just going to keep running over and over again\n//whatever is put into the array: if that chaanges, then the useEffect will run ","import React, { createContext, useContext, useState } from 'react';\n\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({ children }) => {\n  const [selectedProject, setSelectedProject] = useState('INBOX');\n\n  return (\n    <SelectedProjectContext.Provider\n      value={{ selectedProject, setSelectedProject }}\n    >\n      {children}\n    </SelectedProjectContext.Provider>\n  );\n};\n\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);","\nimport React from 'react';\nimport { useProjectsValue } from '../context';\n\nexport const ProjectOverlay = ({\n  setProject,\n  showProjectOverlay,\n  setShowProjectOverlay,\n}) => {\n  const { projects } = useProjectsValue();\n\n  return (\n    projects &&\n    showProjectOverlay && (\n      <div className=\"project-overlay\" >\n        <ul className=\"project-overlay__list\">\n          {projects.map((project) => (\n            <li key={project.projectId}>\n              <div\n            \n                onClick={() => {\n                  setProject(project.projectId);\n                  setShowProjectOverlay(false);\n                }}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') {\n                    setProject(project.projectId);\n                    setShowProjectOverlay(false);\n                  }\n                }}\n                role=\"button\"\n                tabIndex={0}\n              >\n                {project.name}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  );\n};","\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport {FaSpaceShuttle, FaSun, FaRegPaperPlane} from 'react-icons/fa';\n\nexport const TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) => {\n\n  return (\n  showTaskDate && (\n    <div className=\"task-date\" >\n      <ul className=\"task-date__list\">\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().format('DD/MM/YYYY'));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setShowTaskDate(false);\n                setTaskDate(moment().format('DD/MM/YYYY'));\n              }\n            }}\n            data-testid=\"task-date-today\"\n            tabIndex={0}\n            aria-label=\"Select today as the task date\"\n            role=\"button\"\n          >\n            <span>\n              <FaSpaceShuttle />\n            </span>\n            <span>Today</span>\n          </div>\n        </li>\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setShowTaskDate(false);\n                setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n              }\n            }}\n            \n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"Select tomorrow as the task date\"\n          >\n            <span>\n              <FaSun />\n            </span>\n            <span>Tomorrow</span>\n          </div>\n        </li>\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setShowTaskDate(false);\n                setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n              }\n            }}\n           \n            aria-label=\"Select next week as the task date\"\n            tabIndex={0}\n            role=\"button\"\n          >\n            <span>\n              <FaRegPaperPlane />\n            </span>\n            <span>Next week</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n    ) \n  );\n};","\nimport React, { useState } from 'react';\nimport { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\nimport moment from 'moment';\nimport { firebase } from '../firebase';\nimport { useSelectedProjectValue } from '../context';\nimport { ProjectOverlay } from './ProjectOverlay';\nimport { TaskDate } from './TaskDate';\n\n\nexport const AddTask = ({\n  showAddTaskMain = true,\n  shouldShowMain = false,\n  showQuickAddTask,\n  setShowQuickAddTask,\n}) => {\n  const [task, setTask] = useState('');\n  const [taskDate, setTaskDate] = useState('');\n  const [project, setProject] = useState('');\n  const [showMain, setShowMain] = useState(shouldShowMain);\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n  const [showTaskDate, setShowTaskDate] = useState(false);\n\n  const { selectedProject } = useSelectedProjectValue();\n\n  const addTask = () => {\n    const projectId = project || selectedProject;\n    let collatedDate = '';\n\n    if (projectId === 'TODAY') {\n      collatedDate = moment().format('DD/MM/YYYY');\n    } else if (projectId === 'NEXT_7') {\n      collatedDate = moment().add(7, 'days').format('DD/MM/YYYY');\n    }\n\n    return (\n      task &&\n      projectId &&\n      firebase\n        .firestore()\n        .collection('tasks')\n        .add({\n          archived: false,\n          projectId,\n          task,\n          date: collatedDate || taskDate,\n          userId: \"nfeCumoN\",\n        })\n        .then(() => {\n          setTask('');\n          setProject('');\n          setShowMain('');\n          setShowProjectOverlay(false);\n        })\n    );\n  };\n\n  return (\n    <div\n      className={showQuickAddTask ? 'add-task add-task__overlay' : 'add-task'}\n      data-testid=\"add-task-comp\"\n    >\n      {showAddTaskMain && (\n        <div\n          className=\"add-task__shallow\"\n          data-testid=\"show-main-action\"\n          onClick={() => setShowMain(!showMain)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') setShowMain(!showMain);\n          }}\n          tabIndex={0}\n          aria-label=\"Add task\"\n          role=\"button\"\n        >\n          <span className=\"add-task__plus\">+</span>\n          <span className=\"add-task__text\">Add Task</span>\n        </div>\n      )}\n\n      {(showMain || showQuickAddTask) && (\n        <div className=\"add-task__main\" >\n          {showQuickAddTask && (\n            <>\n              <div >\n                <h2 className=\"header\">Quick Add Task</h2>\n                <span\n                  className=\"add-task__cancel-x\"\n                  \n                  aria-label=\"Cancel adding task\"\n                  onClick={() => {\n                    setShowMain(false);\n                    setShowProjectOverlay(false);\n                    setShowQuickAddTask(false);\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      setShowMain(false);\n                      setShowProjectOverlay(false);\n                      setShowQuickAddTask(false);\n                    }\n                  }}\n                  tabIndex={0}\n                  role=\"button\"\n                >\n                  X\n                </span>\n              </div>\n            </>\n          )}\n          \n          <ProjectOverlay\n            setProject={setProject}\n            showProjectOverlay={showProjectOverlay}\n            setShowProjectOverlay={setShowProjectOverlay}\n            />\n                  \n            <TaskDate\n            setTaskDate={setTaskDate}\n            showTaskDate={showTaskDate}\n            setShowTaskDate={setShowTaskDate}\n          />\n          <input\n            className=\"add-task__content\"\n            aria-label=\"Enter your task\"\n            type=\"text\"\n            value={task}\n            onChange={(e) => setTask(e.target.value)}\n          />\n          <button\n            type=\"button\"\n            className=\"add-task__submit\"\n            onClick={() => (showQuickAddTask ?  addTask() &&  setShowQuickAddTask(false) :  addTask()) }\n          >\n            Add Task\n          </button>\n          {!showQuickAddTask && (\n            <span\n              className=\"add-task__cancel\"\n              onClick={() => {\n                setShowMain(false);\n                setShowProjectOverlay(false);\n              }}\n            >\n              Cancel\n            </span>\n          )}\n          <span\n            className=\"add-task__project\"\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShowProjectOverlay(!showProjectOverlay);\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegListAlt />\n          </span>\n          <span\n            className=\"add-task__date\"\n            onClick={() => setShowTaskDate(!showTaskDate)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShowTaskDate(!showTaskDate);\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegCalendarAlt />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\n","import React, {useState} from 'react';\nimport {FaPizzaSlice , FaEdge} from 'react-icons/fa';\nimport { AddTask } from '../AddTask';\n\n\nexport const Header = ({darkMode, setDarkMode}) => {\n    const [shouldShowMain, setShouldShowMain] = useState(false);\n    const [showQuickAddTask, setShowQuickAddTask] = useState(false);\n    return <header className='header' data-testid='header'>\n        <nav>\n            <div className='logo'>\n                <img src='/images/logo.png'/>\n            </div>\n            <div className='settings'>\n                <ul>\n                    <li className='settings__add' \n                    data-testid='quick-add-task-action'\n                    onClick={() => {setShowQuickAddTask(true); setShouldShowMain(true);}}\n                    >+</li>\n                    <li className='settings__darkmode' \n                        data-testid='dark-mode-action'\n                        onClick={()=>setDarkMode(!darkMode)}\n                        ><FaEdge />\n                    </li>\n                </ul>\n            </div>\n        </nav>\n        <AddTask\n        \n            showAddTaskMain={false}\n            shouldShowMain={shouldShowMain}\n            showQuickAddTask={showQuickAddTask}\n            setShowQuickAddTask={setShowQuickAddTask}\n\n        \n         />\n    </header>\n\n\n    \n}","import React, { useState } from 'react';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport { useProjectsValue, useSelectedProjectValue } from '../context';\nimport { firebase } from '../firebase';\n\nexport const IndividualProject = ({ project }) => {\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { projects, setProjects } = useProjectsValue();\n  const { setSelectedProject } = useSelectedProjectValue();\n\n  const deleteProject = (docId) => {\n    firebase\n      .firestore()\n      .collection('projects')\n      .doc(docId)\n      .delete()\n      .then(() => {\n        setProjects([...projects]);\n        setSelectedProject('INBOX');\n      });\n  };\n\n  return (\n    <>\n      <span className=\"sidebar__dot\">•</span>\n      <span className=\"sidebar__project-name\">{project.name}</span>\n      <span\n        className=\"sidebar__project-delete\"\n        data-testid=\"delete-project\"\n        onClick={() => setShowConfirm(!showConfirm)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') setShowConfirm(!showConfirm);\n        }}\n        tabIndex={0}\n        role=\"button\"\n        aria-label=\"Confirm deletion of project\"\n      >\n        <FaTrashAlt />\n        {showConfirm && (\n          <div className=\"project-delete-modal\">\n            <div className=\"project-delete-modal__inner\">\n              <p>Are you sure you want to delete this project?</p>\n              <button\n                type=\"button\"\n                onClick={() => deleteProject(project.docId)}\n              >\n                Delete\n              </button>\n              <span\n                onClick={() => setShowConfirm(!showConfirm)}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') setShowConfirm(!showConfirm);\n                }}\n                tabIndex={0}\n                role=\"button\"\n                aria-label=\"Cancel adding project, do not delete\"\n              >\n                Cancel\n              </span>\n            </div>\n          </div>\n        )}\n      </span>\n    </>\n  );\n};\n","\nimport React, { useState } from 'react';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nimport { IndividualProject } from './IndividualProject';\n\nexport const Projects = ({ activeValue = null }) => {\n  const [active, setActive] = useState(activeValue);\n  const { setSelectedProject } = useSelectedProjectValue();\n  const { projects } = useProjectsValue();\n\n  return (\n    projects &&\n    projects.map((project) => (\n      <li\n        key={project.projectId}\n     \n        data-doc-id={project.docId}\n        className={\n          active === project.projectId\n            ? 'active sidebar__project'\n            : 'sidebar__project'\n        }\n      >\n        <div\n          role=\"button\"\n          tabIndex={0}\n          aria-label={`Select ${project.name} as the task project`}\n          onClick={() => {\n            setActive(project.projectId);\n            setSelectedProject(project.projectId);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              setActive(project.projectId);\n              setSelectedProject(project.projectId);\n            }\n          }}\n        >\n          \n          <IndividualProject project={project} />\n\n        </div>\n      </li>\n    ))\n  );\n};\n","import React, { useState } from 'react';\nimport { firebase } from '../firebase';\nimport { generatePushId } from '../helpers';\nimport { useProjectsValue } from '../context';\n\nexport const AddProject = ({ shouldShow = false }) => {\n  const [show, setShow] = useState(shouldShow);\n  const [projectName, setProjectName] = useState('');\n\n  const projectId = generatePushId();\n  const { projects, setProjects } = useProjectsValue();\n\n  const addProject = () =>\n    projectName &&\n    firebase\n      .firestore()\n      .collection('projects')\n      .add({\n        projectId,\n        name: projectName,\n        userId: 'nfeCumoN',\n      })\n      .then(() => {\n        setProjects([...projects]);\n        setProjectName('');\n        setShow(false);\n      });\n\n  return (\n    <div className=\"add-project\" >\n      {show && (\n        <div className=\"add-project__input\" >\n          <input\n            value={projectName}\n            onChange={(e) => setProjectName(e.target.value)}\n            className=\"add-project__name\"\n            type=\"text\"\n            placeholder=\"Name your project\"\n          />\n          <button\n            className=\"add-project__submit\"\n            type=\"button\"\n            onClick={() => addProject()}\n            \n          >\n            Add Project\n          </button>\n          <span\n            className=\"add-project__cancel\"\n            onClick={() => setShow(false)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShow(false);\n            }}\n            role=\"button\"\n            tabIndex={0}\n          >\n            Cancel\n          </span>\n        </div>\n      )}\n      <span className=\"add-project__plus\">+</span>\n      <span\n        aria-label=\"Add Project\"\n        className=\"add-project__text\"\n        onClick={() => setShow(!show)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') setShow(!show);\n        }}\n        role=\"button\"\n        tabIndex={0}\n      >\n        Add Project\n      </span>\n    </div>\n  );\n};\n\n\n","// import React, {useState} from 'react';\n// import {FaChevronDown, FaInbox, FaRegCalendarAlt, FaRegCalendar} from 'react-icons/fa';\n// import {Projects} from '../Projects';\n// import {useSelectedProjectValue} from '../../context';\n\n\n// export const Sidebar = () => {\n    \n//     const {selectedProject} = useSelectedProjectValue;\n//     const {active, setActive} = useState('inbox');\n//     const {showProjects, setShowProjects} = useState(true);\n\n//     return (\n//     <div className='sidebar' data-testid='sidebar'>\n//         <ul className='sidebar__generic'>\n//             <li data-testid='inbox' className='inbox'>\n//                 <span>\n//                     <FaInbox />\n//                 </span>\n//                 <span>\n//                     Inbox\n//                 </span>\n//             </li>\n//             <li data-testid='today' className='today'>\n//                 <span>\n//                     <FaRegCalendar />\n//                 </span>\n//                 <span>\n//                     Today\n//                 </span>\n//             </li>\n\n//             <li data-testid='next_7' className='next_7'>\n//                 <span>\n//                     <FaRegCalendarAlt />\n//                 </span>\n//                 <span>\n//                     Next 7 Days\n//                 </span>\n//             </li>\n//         </ul>\n\n//         <div className=\"sidebar__middle\">\n//             <span><FaChevronDown /></span>\n//             <h2>Projects</h2>\n//         </div>\n\n//         <ul className='sidebar__projects'>\n//             {showProjects && <Projects />}\n            \n//         </ul>\n//         {showProjects && <AddProject />}\n//     </div>\n// )};\n\nimport React, { useState } from 'react';\nimport {\n  FaChevronDown,\n  FaInbox,\n  FaRegCalendarAlt,\n  FaRegCalendar,\n} from 'react-icons/fa';\nimport { Projects } from '../Projects';\nimport { useSelectedProjectValue } from '../../context';\nimport { AddProject } from '../AddProject';\n\nexport const Sidebar = () => {\n  const { setSelectedProject } = useSelectedProjectValue();\n  const [active, setActive] = useState('inbox');\n  const [showProjects, setShowProjects] = useState(true);\n\n  return (\n    <div className=\"sidebar\" data-testid=\"sidebar\">\n      <ul className=\"sidebar__generic\">\n        <li\n          data-testid=\"inbox\"\n          className={active === 'inbox' ? 'active' : undefined}\n          onClick = {() => {\n              setActive('inbox');\n              setSelectedProject('INBOX');\n          }}\n        >\n          <div\n            data-testid=\"inbox-action\"\n            aria-label=\"Show inbox tasks\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive('inbox');\n              setSelectedProject('INBOX');\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setActive('inbox');\n                setSelectedProject('INBOX');\n              }\n            }}\n          >\n            <span>\n              <FaInbox />\n            </span>\n            <span>Inbox</span>\n          </div>\n        </li>\n        <li\n          data-testid=\"today\"\n          className={active === 'today' ? 'active' : undefined}\n        >\n          <div\n            data-testid=\"today-action\"\n            aria-label=\"Show today's tasks\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive('today');\n              setSelectedProject('TODAY');\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setActive('today');\n                setSelectedProject('TODAY');\n              }\n            }}\n          >\n            <span>\n              <FaRegCalendar />\n            </span>\n            <span>Today</span>\n          </div>\n        </li>\n        <li\n          data-testid=\"next_7\"\n          className={active === 'next_7' ? 'active' : undefined}\n        >\n          <div\n            data-testid=\"next_7-action\"\n            aria-label=\"Show tasks for the next 7 days\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive('next_7');\n              setSelectedProject('NEXT_7');\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setActive('next_7');\n                setSelectedProject('NEXT_7');\n              }\n            }}\n          >\n            <span>\n              <FaRegCalendarAlt />\n            </span>\n            <span>Next 7 days</span>\n          </div>\n        </li>\n      </ul>\n      <div\n        className=\"sidebar__middle\"\n        aria-label=\"Show/hide projects\"\n        onClick={() => setShowProjects(!showProjects)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') setShowProjects(!showProjects);\n        }}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <span>\n          <FaChevronDown\n            className={!showProjects ? 'hidden-projects' : undefined}\n          />\n        </span>\n        <h2>Projects</h2>\n      </div>\n\n      <ul className=\"sidebar__projects\">{showProjects && <Projects />}</ul>\n\n      {showProjects && <AddProject />}\n    </div>\n  );\n};","import React from 'react';\nimport {firebase} from '../firebase';\n\nexport const Checkbox = ({id}) => {\n    const archiveTask = () => {\n        firebase\n            .firestore()\n            .collection('tasks')\n            .doc(id)\n            .update({\n                archived: true,\n            });\n\n    };\n\n    return (\n        <div className='checkbox-holder' \n        onClick={()=> archiveTask()}>\n\n        <span className='checkbox'></span>\n        \n        </div>\n\n    )\n};\n\n","import React, {useState, useEffect} from 'react';\nimport { Checkbox } from '../components/Checkbox';\nimport { useTasks} from '../hooks';\nimport { AddTask } from './AddTask';\nimport { collatedTasks} from '../constants';\nimport { getTitle, getCollatedTitle, collatedTasksExist} from '../helpers';\nimport {useSelectedProjectValue, useProjectsValue} from '../context';\n\n\nexport const Tasks = () => {\n    const {selectedProject} = useSelectedProjectValue();\n    const { projects } = useProjectsValue();\n    const {tasks} = useTasks(selectedProject);\n\n    let projectName = '';\n\n\n    if (projects && selectedProject && !collatedTasksExist(selectedProject)){\n        projectName = getTitle(projects, selectedProject).name;\n        console.log('projectName 1: ', projectName);\n    }\n\n    if (collatedTasksExist(selectedProject) && selectedProject ) {\n        projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n        console.log('projectName 2: ', projectName);\n\n    }\n\n    useEffect(() => {\n        document.title = `${projectName}: Task!`\n    });\n\n\n    return (\n        <div className=\"tasks\" data-testid=\"tasks\">\n          <h2 data-testid=\"project-name\">{projectName}</h2>\n    \n          <ul className=\"tasks__list\">\n            {tasks.map((task) => (\n              <li key={`${task.id}`}>\n                <Checkbox id={task.id} taskDesc={task.task} />\n                <span>{task.task}</span>\n              </li>\n            ))}\n          </ul>\n        \n        <AddTask />\n        </div>\n      );\n\n    \n    \n}","import React from 'react';\nimport { Sidebar} from './Sidebar';\nimport { Tasks } from '../Tasks';\n\nexport const Content = () => {\n    return(\n        <section className='content'>\n        <Sidebar />\n        <Tasks />\n    </section>\n\n    )\n\n}","import React, {useState} from 'react';\nimport { Header } from './components/layout/Header';\nimport { Content } from './components/layout/Content';\n\nimport { ProjectsProvider, SelectedProjectProvider} from './context';\n\n\n\n\n\nexport const App = ({ darkModeDefault = false }) => {\n  const [darkMode, setDarkMode] = useState(darkModeDefault);\n\n  return (\n    <SelectedProjectProvider>\n      <ProjectsProvider>\n        <main\n          data-testid=\"application\"\n          className={darkMode ? 'darkmode' : undefined}\n        >\n          <Header darkMode={darkMode} setDarkMode={setDarkMode} />\n          <Content />\n        </main>\n      </ProjectsProvider>\n    </SelectedProjectProvider>\n  );\n};\n\n","import React from 'react';\nimport { render } from 'react-dom';\nimport  {App}  from './App';\nimport './App.scss';\n\n\nrender(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}